/*将数组中的数字从小到大排序，我们用选择排序(selectionSort)的算法进行排序。
从Arr[0]开始依次和后面的数组成员比较大小，如果遇到比自己小的则以这个成员为
基准继续和后面的比较，一直到比完最后一个数组成员，这一轮下来所有成员当中数值
最小的那个成员的位置要和第一位成员的位置互换，以上这样，我们就能排好第一个数
了。然后进行第二轮比较，由于第一个位置已定，所以要从Arr[1]开始比较，重复上面
操作，一直到第三轮，第四轮......一直到最终排序完毕*/

//声明数组Arr
var arr=[3,1,2,4,6,5,9,7,8];
//声明变量index作为数组下标
var index;
//声明变量media用于排序过程中属性值互换的媒介
var media;
//声明变量store用于存储一些必要的数据
var store;
//声明变量whell&time，分别代表比较轮数与次数
var whell=0,time=0;
//首先需要用循环来做比较的轮数
while (whell<arr.length-1){
	/*因为每一轮定一个数值，所以接下来的比较都要从下一个位置开始，由于time在下
	列循环中会自增，index会改变，所以我们需要time和index的值在开始时保持一定。*/
	time=index=whell;
	//每轮需要比较多少次，这个我们需要遍历数组
	while (time<arr.length-1){
		//如果第一个大于第二个，就time++再次循环和第三个比，已次类推
		if (arr[index]<arr[time+1]){
		}
		//反之，交换下标，因为最小得值已经发生改变，第二次，第三次...的比较要以最小的数为基准
		else{
			index=time+1;
		}
		//次数自增，下一次
		time++;
	}
	//每轮比较完毕我们就要把最小的那个数组成员按从左到右的顺序排好定下来
	media=arr[index];
	arr[index]=arr[whell];
	arr[whell]=media;
	//轮数自增，下一轮
	whell++;
}
console.log(arr);